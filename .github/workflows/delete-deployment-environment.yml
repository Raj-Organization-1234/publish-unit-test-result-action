name: delete-deployment-environment

on:
  workflow_dispatch:
    inputs:
      action-tag:
        description: 'Branch or tag to test'
        required: true
        default: 'main'

env:
  ENVIRONMENT: test
  REF: delete-deployment-environment
  REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
  GH_APP_ID: ${{ secrets.GH_APP_ID }}
  GH_APP_PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}

jobs:
  full-cleanup:
    name: üßº Full Cleanup - Delete Deployments & Environment
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          initial-status: success

      - name: Delete deployments & environment
        uses: Raj-Organization-1234/delete-deployment-environment@release
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}

      - name: üß™ Verify environment was deleted
        run: |
          status=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: token ${{ env.REPO_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/environments/${{ env.ENVIRONMENT }})

          if [ "$status" -eq 404 ]; then
            echo "‚úÖ Environment deleted"
          else
            echo "‚ùå Environment still exists (status: $status)"
            exit 1
          fi

  only-remove:
    name: üóëÔ∏è Only Remove Deployments
    needs: full-cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          initial-status: success

      - name: Remove deployments only
        uses: Raj-Organization-1234/delete-deployment-environment@release
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          onlyRemoveDeployments: true

      - name: üß™ Verify deployments were removed
        run: |
          deployments=$(curl -s \
            -H "Authorization: token ${{ env.REPO_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?environment=${{ env.ENVIRONMENT }}")

          count=$(echo "$deployments" | jq 'length')
          if [ "$count" -eq 0 ]; then
            echo "‚úÖ Deployments removed"
          else
            echo "‚ùå Still $count deployments remain"
            exit 1
          fi

  only-deactivate:
    name: üîï Only Deactivate Deployments
    needs: only-remove
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          initial-status: success

      - name: Deactivate deployments only
        uses: Raj-Organization-1234/delete-deployment-environment@release
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          onlyDeactivateDeployments: true

      - name: üß™ Verify deployments are inactive
        run: |
          deployments=$(curl -s \
            -H "Authorization: token ${{ env.REPO_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?environment=${{ env.ENVIRONMENT }}")

          inactive_count=$(echo "$deployments" | jq '[.[] | select(.inactive_at != null)] | length')
          total=$(echo "$deployments" | jq 'length')

          if [ "$inactive_count" -eq "$total" ]; then
            echo "‚úÖ All deployments are inactive"
          else
            echo "‚ùå $((total - inactive_count)) deployments are still active"
            exit 1
          fi

  ref-only:
    name: üéØ Delete Deployments by Ref Only
    needs: only-deactivate
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          initial-status: success

      - name: Remove deployments for a specific ref
        uses: Raj-Organization-1234/delete-deployment-environment@release
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          onlyRemoveDeployments: true

      - name: üß™ Verify deployments by ref are removed
        run: |
          deployments=$(curl -s \
            -H "Authorization: token ${{ env.REPO_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?ref=${{ env.REF }}&environment=${{ env.ENVIRONMENT }}")

          count=$(echo "$deployments" | jq 'length')
          if [ "$count" -eq 0 ]; then
            echo "‚úÖ Ref deployments removed"
          else
            echo "‚ùå Still $count deployments for ref remain"
            exit 1
          fi

  github-app-cleanup:
    name: üõ°Ô∏è Cleanup Using GitHub App Token
    needs: ref-only
    runs-on: ubuntu-latest
    steps:
      - name: Create deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ env.REPO_ACCESS_TOKEN }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}
          initial-status: success

      - name: Generate GitHub App token
        uses: navikt/github-app-token-generator@a3831f44404199df32d8f39f7c0ad9bb8fa18b1c
        id: get-token
        with:
          app-id: ${{ env.GH_APP_ID }}
          private-key: ${{ env.GH_APP_PRIVATE_KEY }}

      - name: Delete with GitHub App token
        uses: Raj-Organization-1234/delete-deployment-environment@release
        with:
          token: ${{ steps.get-token.outputs.token }}
          environment: ${{ env.ENVIRONMENT }}
          ref: ${{ env.REF }}

      - name: üß™ Verify deployments by ref are removed
        run: |
          deployments=$(curl -s \
            -H "Authorization: token ${{ env.REPO_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/deployments?ref=${{ env.REF }}&environment=${{ env.ENVIRONMENT }}")

          count=$(echo "$deployments" | jq 'length')
          if [ "$count" -eq 0 ]; then
            echo "‚úÖ Ref deployments removed"
          else
            echo "‚ùå Still $count deployments for ref remain"
            exit 1
          fi
